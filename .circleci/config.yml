version: 2.1

orbs:
  slack: circleci/slack@4.10.1

commands:
  failure_notification:
    steps:
      - slack/notify:
          event: fail
          channel: C03DAJYL3SM
          template: basic_fail_1


jobs:

  success_notifications:
    docker: 
      - image: cimg/base:stable
    steps:
      - slack/notify:
          event: pass
          channel: C03DAJYL3SM
          template: success_tagged_deployment_1

  build-frontend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-build
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths:
            - "frontend/node_modules"
          key: frontend-build
      - failure_notification
  
  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: 
            - backend-build
      - run:
          name: Build back-end
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths:
            - "frontend/node_modules"
          key: backend-build
      - failure_notification
    
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-build
      - run:
          name: Test frontend
          command: | 
            cd frontend
            npm install
            npm run test
      - failure_notification
    
  test-backend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-build
      - run:
          name: Test Backend
          command: |
            cd backend
            npm install
            npm run test
      - failure_notification
  
  scan-frontend: 
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-build
      - run:
          name: Scan frontend
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      - failure_notification

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-build
      - run:
          name: Scan backend
          command: |
            cd backend
            npm install
            npm audit fix --force --audit-level=critical
            npm audit fix --force --audit-level=critical
            npm audit --audit-level=critical
      - failure_notification

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-frontend:
          requires:
            - build-frontend
      - scan-backend:
          requires:
            - "build-backend"
      - success_notifications:
          requires:
            - test-backend
            - test-frontend
          context:
            - org-global 
            - SlackNotification